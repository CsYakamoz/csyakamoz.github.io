<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>coding-style on Awesome</title>
    <link>https://csyakamoz.github.io/tags/coding-style/</link>
    <description>Recent content in coding-style on Awesome</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Sep 2020 10:32:18 +0800</lastBuildDate><atom:link href="https://csyakamoz.github.io/tags/coding-style/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>编码风格</title>
      <link>https://csyakamoz.github.io/post/2020/09/09/%E7%BC%96%E7%A0%81%E9%A3%8E%E6%A0%BC/</link>
      <pubDate>Wed, 09 Sep 2020 10:32:18 +0800</pubDate>
      
      <guid>https://csyakamoz.github.io/post/2020/09/09/%E7%BC%96%E7%A0%81%E9%A3%8E%E6%A0%BC/</guid>
      <description>ESLint  ESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code, with the goal of making code more consistent and avoiding bugs.
 以下风格都会尽量补充对应的 eslint 规则（如果有且被我发现的话 😑
Notice: 请优先以团队约定为准！
缩进使用空格而不是制表符 尽管制表符更省空间，但还是更喜欢空格
 one tab is equal to 2, 4, 8 space
  no-tabs  坚持使用分号 纵然很多人依旧坚持不使用分号，但我就喜欢加分号，就这么滴。
 semi  坚持使用大括号 即使只有一条语句，也依旧要使用大括号；
同时，else 与 if 的 } 处在统一行；
1// bad 2if (test) return false; 3else return true; 4 5// bad 6if (test) 7 return false; 8else 9 return true; 10 11// bad 12if (test) { 13 return false; 14} 15else { 16 return true; 17} 18 19// good 20if (test) { 21 return false; 22} else { 23 return true; 24}  curly brace-style nonblock-statement-body-position  const 优于 let, 弃用 var var 的坏处，此处不一一阐述；</description>
    </item>
    
  </channel>
</rss>
