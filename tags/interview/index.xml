<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>interview on Awesome</title>
    <link>https://csyakamoz.github.io/tags/interview/</link>
    <description>Recent content in interview on Awesome</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Mar 2021 23:10:33 +0800</lastBuildDate><atom:link href="https://csyakamoz.github.io/tags/interview/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>面试题目 - 1</title>
      <link>https://csyakamoz.github.io/post/2021/03/15/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE-1/</link>
      <pubDate>Mon, 15 Mar 2021 23:10:33 +0800</pubDate>
      
      <guid>https://csyakamoz.github.io/post/2021/03/15/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE-1/</guid>
      <description>记录一次笔试中的题目
 MySQL 中 truncate, drop, delete 的区别 摘自 TRUNCATE TABLE vs. DELETE vs. DROP TABLE: Removing Tables and Data in SQL
 google 关键词: truncate drop delete mysql
 delete delete 是 DML (Data Manipulation Language) 命令;
此命令从表中删除记录; 它只用于从表中删除记录, 而不是从数据库中删除表;
语法:
1-- 删除表 tb_name 中的所有记录 2delete from tb_name; 3 4-- 删除表 tb_name 中满足 condition 条件的记录 5delete from tb_name where condition  如果你不想删除表结构或者仅想删除特定记录, 可使用 delete; 此命令可以删除一个, 一些或全部记录; 该命令执行成功时, 会返回此次执行中被删除记录数; delete 命令在执行中会使用行锁且可回滚; 每个被删除的记录都会被锁; delete 会保持自增 ID(auto-increment ID) 的值; 例如删除了最新的记录, 其 ID 为 20, 然后再次插入新记录, 则该记录的 ID 为 21 - 即使它前面那条记录是 19;  truncate truncate 类似于 delete, 但它是 DDL (Data Definition Language) 命令;</description>
    </item>
    
  </channel>
</rss>
